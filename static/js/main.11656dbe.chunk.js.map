{"version":3,"sources":["components/card/card.jsx","components/cardList/cardList.jsx","components/searchField/searchField.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchField","type","placeholder","onChange","changeHandler","App","useState","setMonsters","searchField","setSearchField","useEffect","fetch","then","response","json","users","filteredMonsters","filter","toLowerCase","includes","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAeeA,MAbf,SAAcC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,W,MCISC,MAVf,SAAkBR,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,U,MCMZM,MAXf,SAAqBX,GACnB,OACE,8BACE,uBAAOC,UAAU,eACjBW,KAAK,SACLC,YAAab,EAAMa,YACnBC,SAAUd,EAAMe,mBCuBPC,MA3Bf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOR,EAAP,KAAiBS,EAAjB,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAWR,EAAYQ,QAC9B,IAEH,IAIMC,EAAmBlB,EAASmB,QAAO,SAAAxB,GAAO,OAC9CA,EAAQE,KAAKuB,cAAcC,SAASX,EAAYU,kBAGlD,OACE,sBAAK5B,UAAU,MAAf,UACE,0CACA,cAAC,EAAD,CAAaY,YAAY,SAASE,cAXhB,SAACgB,GACrBX,EAAeW,EAAMC,OAAOC,UAW1B,cAAC,EAAD,CAAUxB,SAAUkB,QCtB1BO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.11656dbe.chunk.js","sourcesContent":["import \"./card.css\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card-container\">\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n      />\n      <h2> {props.monster.name} </h2>\n      <p> {props.monster.email} </p>\n    </div>\n  );\n}\n\nexport default Card;\n","import Card from \"../card/card\";\nimport \"./cardList.css\";\n\n\nfunction CardList(props) {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n}\n\nexport default CardList;\n","import \"./searchField.css\";\n\n\nfunction SearchField(props) {\n  return (\n    <div>\n      <input className='search-field' \n      type='search' \n      placeholder={props.placeholder}\n      onChange={props.changeHandler}/>\n    </div>\n  );\n}\n\nexport default SearchField;\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/cardList/cardList.jsx\";\nimport SearchField from \"./components/searchField/searchField.jsx\";\n\nfunction App() {\n  const [monsters, setMonsters] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => setMonsters(users));\n  }, []);\n\n  const changeHandler = (event) => {\n    setSearchField(event.target.value);\n  };\n\n  const filteredMonsters = monsters.filter(monster =>\n    monster.name.toLowerCase().includes(searchField.toLowerCase())\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Monsters</h1>\n      <SearchField placeholder=\"Search\" changeHandler={changeHandler} />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}